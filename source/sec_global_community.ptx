<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec_global_community" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>The Challenges of Global Community</title>
    <p>Most FOSS projects are (or̉ aspire to become) distributed, global communities. This introduces a number of challenges:
   
    <ul>
    <li><title>Language</title> Any global community will of necessity include participants with different native languages. Large projects usually evolve collaborative subgroups that work on documentation and localization for specific languages, but contributors to code and base documentation need a common language in which they can communicate. In many cases, the common language is English &#8212; in part because it is one of the most widely spoken languages today. However, the fact that the reserved keywords and base documentation for many programming languages are in English may also be a critical factor. In Eric S. Raymond&#8217;s How to Become a Hacker, Linus Torvalds, the original creator of the Linux kernel, is quoted as saying that it never occurred to him to comment the Linux kernel code in any language other than English, despite the fact that English is his third language.
    </li>
    <li><title>Time and distance</title> The fact that our globe spins introduces some interesting challenges: collaborators in India and the USA, for example, will never be able to collaborate in real time during normal business hours &#8212; in fact, they'll hardly be able to collaborate during normal waking hours. Most communities meet face-to-face only once or twice a year, if at all, and the face-to-face meetings usually involve only a small subset of the whole community. These challenges have forced the development of really good asynchronous online communication tools. However, having people in different timezones also has some advantages, making it easier to staff IRC channels, follow rapidly-developing security issues, and manage infrastructure 24&#215;7.
    </li>
    <li><title>Ego</title> Standing out in an ocean of nicknames and e-mail addresses, trusting people you have never met, and accepting criticism from strangers is very difficult. Control freaks, glory-grabbers, bullies, and fearmongers exist in FOSS communities and are poisonous to community-building. Creating a fork of a software project is a significant undertaking that is not usually done except as a last resort, because it divides community attention and requires duplication of resources; however, the simple fact that a fork is possible and the community is essential often provides an effective check on runaway egos.
    </li>
    </ul>
    </p>
</section>

