<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec_oss_matters" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Why might OSS matter to me</title>
  <introduction>
			<p>
				Open source software matters because it’s real, and because you, the student, can see in to the guts of it. And if you choose to go out into the real world, looking for a job as a software developer, you will have a tremendous advantage if you can prove that you have experience in real software projects — ugly, messy, confusing, gigantic software projects.
			</p>

			<p>
				Without OSS, getting experience in real software projects requires access, and probably permission, to see the source code. For students, that access is usually limited to those who can get <em>internships</em> or positions in <em>co-op </em>programs. Not everyone has the opportunity to spend the summer interning with a company that does large-scale software development, meaning that too few students have the opportunity to work with large (proprietary/closed) codebases. And even if they do, those students typically cannot show their work to anyone outside of the sponsoring company, and they sometimes cannot even discuss that work.
			</p>

			<p>
				In the world of OSS, the source code is available to anyone who wants to see it. Not only is the source code available — also available are all of the interesting challenges that go with managing large software projects. In this book, we explore a number of these challenges and help you engage in them in direct and practical ways.
			</p>
  </introduction>

  <subsection xml:id="source-control">
				<title>Source Control</title>

				<p>
					How do fifteen software engineers work on the same piece of software together? When two software engineers decide independently to edit the same line of code, what happens? In the world of OSS, we make use of version control systems to help avoid these kinds of problems. Without version control, it’s a disaster, which is why we cover version control in the chapter <xref ref="ch_git"/>.
				</p>

  </subsection>
  <subsection xml:id="build-system">
					<title>Build Systems</title>

					<p>
						Complex software is built in different <em>modules</em>. Those modules have different names in every language — <em>modules</em>, <em>packages</em>, <em>libraries</em>, etc. — but modularity is always introduced to help manage the complexity of large projects. One software project may import dozens, or even hundreds, of previously built software modules. What happens when one of those modules changes? If you don’t know how those modules fit together, it’s a disaster. Which is why we cover <em>build management</em> in the chapter <xref ref="ch_building_code"/>.
					</p>

  </subsection>
  <subsection xml:id="documentation">
			<title>Documentation</title>

					<p>
						There’s also a lot more to good software than just the code. How do you make sure people have the resources and knowledge they need to find and run (and/or contribute to) the software that you make? Beautiful code that doesn’t get used is just as useful as code that was never written. Which is why we cover <em>documentation</em> in the chapter <xref ref="ch_documentation"/>.
					</p>

	</subsection>

	<subsection xml:id="tracking-bugs">
					<title>Tracking Bugs</title>

					<p>
						Most code is buggy. Even the very best code can still have bugs, which means the ability to find and eliminate bugs is a critical skill for all software engineers. If you don’t know how to find the bugs your users find, you’re in trouble. Which is why we cover bug hunting and the mechanics of fixing code in the chapter entitled <xref ref="ch_bugs_and_debugging"/>.
					</p>

	</subsection>

	<subsection xml:id="experiencing-the-software-lifecycle">
					<title>Experiencing the Software Lifecycle</title>

					<p>
						There’s a saying about software programs: they’re never finished, only abandoned. There’s always more work to do to improve any software project. The thing that makes OSS so unique, and so interesting to the aspiring programmer, is that anyone can participate in a OSS project. Most large projects can benefit from contribution by even novice programmers. There are also more OSS projects than ever before, with an almost unlimited number of interesting problems. Want to learn how web browsers work? Hack on Firefox. Want to put together an awesome multilingual book reader for the blind? Hack on espeak.
					</p>

          <p>
            Honestly, the primary key is to find a project that interests you.
          </p>

  </subsection>

  <exercise xml:id="exercise-finding-a-project">
				<title>Exercise: Finding a Cool Project</title>

				<p>
					Imagine that you have just been hired as a programmer for OSS Inc., and your manager has told you that you must spend 20% of your time to work on a OSS project that matters to you.
				</p>

				<p><ol>
					<li>
					First, search the web and <em>find sites that host OSS projects</em>. There are many. Bookmark these so that you can come back to them later.
					</li>

					<li>
					Second, <em>browse through several of these sites</em> and find one or more projects that are interesting to you. You might be interested in projects that benefit others. You might be interested in tools that support work that you do. Or, it might be that you might find something strikes your fancy that you never considered before! Take this as an opportunity to explore broadly.
					</li>

					<li>
					After you find a project, <em>write a blog post about it</em>. At this point, the most important thing you can probably do is to explain why the project is interesting to you.
					</li>

				</ol></p>

				<p>
					If you don’t have a blog, set one up for free! Visit <url href="https://www.blogger.com/about/?r=1-null_user" visual="blogger.com">Blogger</url> or <url href="http://wordpress.com/" visual="wordress.com">WordPress</url>; setting up a new blog is easy. Blogs are widely used in the FOSS world by project members to share what they’re doing. Your voice will become one of many, and who knows — your blog might become a resource that other students later look to for inspiration when they are looking for projects to get involved in!
				</p>

	</exercise>

</section>
